{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","createObserver1","boxElement","document","getElementById","IntersectionObserver","handleIntersect1","root","rootMargin","threshold","observe","createObserver2","options","handleIntersect2","entries","observer","arr1","state","forEach","entry","console","log","intersectionRatio","setState","concat","arr2","page","this","className","id","class","map","x","src","style","height","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8c26c6d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      arr1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      arr2: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    };\n  }\n  componentDidMount() {\n    this.createObserver1();\n    this.createObserver2();\n\n  }\n\n\n  // callUser = async () => {\n  //   const { page } = this.state;\n  //   // setLoading(true);\n  //   let response = await fetch(\n  //     `https://randomuser.me/api/?page=${page}&results=25&seed=abc`,\n  //     { method: 'GET' }\n  //   );\n  // };\n\n  createObserver1 = () => {\n\n    let options = {\n      // root: document.getElementById('infinite-container1'),\n      root: null,\n      rootMargin: \" 40px\",\n      threshold: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n    };\n    const boxElement = document.getElementById('loading1');\n    const observer = new IntersectionObserver(this.handleIntersect1, options);\n    observer.observe(boxElement);\n  };\n\n  createObserver2 = () => {\n    let options = {\n      root: document.getElementById('infinite-container2'),\n      rootMargin: \" 40px\",\n      threshold: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n    };\n    const boxElement = document.getElementById('loading2');\n    const observer = new IntersectionObserver(this.handleIntersect2, options);\n    observer.observe(boxElement);\n  };\n\n  handleIntersect1 = (entries, observer) => {\n    const { arr1 } = this.state;\n    entries.forEach((entry) => {\n      console.log(entry.intersectionRatio);\n      if (entry.intersectionRatio > 0) {\n        this.setState({ arr1: arr1.concat([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]) });\n      }\n    });\n  };\n\n  handleIntersect2 = (entries, observer) => {\n    const { arr2 } = this.state;\n    entries.forEach((entry) => {\n      console.log(entry.intersectionRatio);\n      if (entry.intersectionRatio > 0) {\n        this.setState({ arr2: arr2.concat([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]) });\n      }\n    });\n  };\n\n  render() {\n    const { arr1, arr2 } = this.state;\n    return (\n      <div className=\"App\" id=\"app\" >\n        <div id=\"infinite-container1\">\n          <label>Root: null </label>\n          <div class=\"cards-list\" id=\"card-list\">\n            {arr1.map((x) => (\n              <div class=\"card 1\">\n                <div class=\"card_image\"> <img src=\"https://i.redd.it/b3esnz5ra34y.jpg\" /> </div>\n                <div class=\"card_title title-white\">\n                  <p>Card Title</p>\n                </div>\n              </div>\n            ))}\n          </div>\n          <div id=\"loading1\" style={{ height: \"100px\" }}>Loading</div>\n        </div>\n        <div id=\"infinite-container2\">\n          <label>Root: parent </label>\n          <div class=\"cards-list\" id=\"card-list\">\n            {arr2.map((x) => (\n              <div class=\"card 1\">\n                <div class=\"card_image\"> <img src=\"https://i.redd.it/b3esnz5ra34y.jpg\" /> </div>\n                <div class=\"card_title title-white\">\n                  <p>Card Title</p>\n                </div>\n              </div>\n            ))}\n          </div>\n          <div id=\"loading2\" style={{ height: \"100px\" }}>Loading</div>\n        </div>\n      </div>);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}